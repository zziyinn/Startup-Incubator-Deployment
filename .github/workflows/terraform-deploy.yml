name: Terraform Infrastructure Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-deploy.yml'
  workflow_dispatch:

jobs:
  deploy-infrastructure:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"
      
      - name: Terraform Init
        working-directory: ./terraform/ecs
        run: |
          terraform init
          terraform get
      
      - name: Terraform Format
        working-directory: ./terraform/ecs
        run: |
          terraform fmt -check
          terraform validate
      
      - name: Terraform Plan
        working-directory: ./terraform/ecs
        run: |
          terraform plan -out=tfplan
          terraform show -json tfplan > tfplan.json
      
      - name: Terraform Apply
        working-directory: ./terraform/ecs
        run: terraform apply -auto-approve tfplan
      
      - name: Verify VPC Configuration
        working-directory: ./terraform/ecs
        run: |
          echo "VPC Configuration:"
          aws ec2 describe-vpcs \
            --filters "Name=tag:Name,Values=${var.project_name}-vpc" \
            --query 'Vpcs[*].[VpcId,CidrBlock,State]' \
            --output table
      
      - name: Verify ECS Cluster
        working-directory: ./terraform/ecs
        run: |
          echo "ECS Cluster Status:"
          aws ecs describe-clusters \
            --clusters $(terraform output -raw project_name)-cluster \
            --query 'clusters[*].[clusterName,status,registeredContainerInstancesCount,runningTasksCount]' \
            --output table
      
      - name: Verify ECS Services
        working-directory: ./terraform/ecs
        run: |
          echo "ECS Services Status:"
          aws ecs describe-services \
            --cluster $(terraform output -raw project_name)-cluster \
            --services $(terraform output -raw project_name)-frontend-service $(terraform output -raw project_name)-backend-service \
            --query 'services[*].[serviceName,runningCount,desiredCount,status]' \
            --output table
      
      - name: Verify Load Balancer
        working-directory: ./terraform/ecs
        run: |
          echo "Load Balancer Status:"
          aws elbv2 describe-load-balancers \
            --names $(terraform output -raw project_name)-alb \
            --query 'LoadBalancers[*].[LoadBalancerName,DNSName,State]' \
            --output table
      
      - name: Verify Auto Scaling
        working-directory: ./terraform/ecs
        run: |
          echo "Auto Scaling Status:"
          aws autoscaling describe-auto-scaling-groups \
            --auto-scaling-group-names $(terraform output -raw project_name)-asg \
            --query 'AutoScalingGroups[*].[AutoScalingGroupName,DesiredCapacity,MinSize,MaxSize]' \
            --output table
      
      - name: Notify success
        if: success()
        run: |
          echo "âœ… Infrastructure successfully deployed with Terraform"
          echo "Deployment completed at $(date)"
          echo "Check the verification steps above for detailed status"
          echo "Application URLs:"
          echo "Frontend: $(terraform output -raw frontend_url)"
          echo "Backend: $(terraform output -raw backend_url)" 